% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lords.R
\name{fetch_lords_party_memberships}
\alias{fetch_lords_party_memberships}
\title{Fetch party memberships for all Lords}
\usage{
fetch_lords_party_memberships(from_date = NA, to_date = NA,
  on_date = NA, while_lord = TRUE, collapse = FALSE)
}
\arguments{
\item{from_date}{A string or Date representing a date. If a string is used
it should specify the date in ISO 8601 date format e.g. '2000-12-31'. The
default value is NA, which means no records are excluded on the basis of
the from_date.}

\item{to_date}{A string or Date representing a date. If a string is used
it should specify the date in ISO 8601 date format e.g. 2000-12-31'. The
default value is NA, which means no records are excluded on the basis
of the to_date.}

\item{on_date}{A string or Date representing a date. If a string is used
it should specify the date in ISO 8601 date format e.g. 2000-12-31'. The
default value is NA, which means no records are excluded on the basis
of the on_date.}

\item{while_lord}{A boolean indicating whether to filter the party
membership to include only those memberships that were held while each
individual was serving as a Lord. The default value is TRUE.}

\item{collapse}{A boolean which determines whether to collapse consecutive
memberships within the same party into a single period of continuous party
membership. Setting this to TRUE means that party membership ids are not
returned in the dataframe. The default value is FALSE.}
}
\value{
A tibble of party memberships for each MP, with one row per party
  membership.
}
\description{
\code{fetch_lords_party_memberships} fetches data from the data platform
showing party memberships for each Lord. The memberships are processed and
merged so that there is only one row for each period of continuous
membership within the same party. A membership with an NA end date is still
open.
}
\details{
The from_date and to_date arguments can be used to filter the memberships
returned. The on_date argument is a convenience that sets the from_date and
to_date to the same given date. The on_date has priority: if the on_date is
set, the from_date and to_date are ignored.

The while_lord argument can be used to filter the memberships to include
only those that occurred during the period when each individual was a Lord.

The filtering is inclusive: a membership is returned if any part of it falls
within the period specified with the from and to dates.

The collapse argument controls whether memberships are combined so that
there is only one row for each period of continuous membership within the
same party. Combining the memberships in this way means that party
membership ids from the data platform are not included in the tibble
returned.

Note that a membership with an NA end date is still open.
}
